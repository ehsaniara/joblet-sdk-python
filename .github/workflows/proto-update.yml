name: Proto Update Check

on:
  schedule:
    # Check for new proto versions daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write
  pull-requests: write

jobs:
  check-proto-updates:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install grpcio-tools

      - name: Check for proto updates
        id: check_updates
        run: |
          # Get current proto version
          current_version=$(python -c "
          try:
              from joblet._proto_generation_info import PROTO_TAG
              print(PROTO_TAG or 'unknown')
          except:
              print('unknown')
          ")
          
          # Get latest available version
          python scripts/generate_proto.py --list-tags > available_tags.txt
          latest_version=$(head -n 1 available_tags.txt | grep -o 'v[0-9]*\.[0-9]*\.[0-9]*' || echo "unknown")
          
          echo "Current version: $current_version"
          echo "Latest version: $latest_version"
          
          echo "current_version=$current_version" >> $GITHUB_OUTPUT
          echo "latest_version=$latest_version" >> $GITHUB_OUTPUT
          
          if [ "$current_version" != "$latest_version" ] && [ "$latest_version" != "unknown" ]; then
            echo "needs_update=true" >> $GITHUB_OUTPUT
            echo "🆕 New proto version available: $latest_version (current: $current_version)"
          else
            echo "needs_update=false" >> $GITHUB_OUTPUT
            echo "✅ Proto version is up to date"
          fi

      - name: Create proto update branch
        if: steps.check_updates.outputs.needs_update == 'true'
        run: |
          BRANCH_NAME="proto-update-${{ steps.check_updates.outputs.latest_version }}"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_ENV
          
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git checkout -b "$BRANCH_NAME"

      - name: Update proto files
        if: steps.check_updates.outputs.needs_update == 'true'
        run: |
          # Generate proto files with latest version
          python scripts/generate_proto.py --version ${{ steps.check_updates.outputs.latest_version }}
          
          # Check if files actually changed
          if git diff --quiet; then
            echo "No actual changes in generated files"
            echo "changes_made=false" >> $GITHUB_ENV
          else
            echo "Proto files updated"
            echo "changes_made=true" >> $GITHUB_ENV
          fi

      - name: Update README
        if: steps.check_updates.outputs.needs_update == 'true' && env.changes_made == 'true'
        run: |
          # Update current version in README
          sed -i "s/**Current version**: \`v[0-9]*\.[0-9]*\.[0-9]*\`/**Current version**: \`${{ steps.check_updates.outputs.latest_version }}\`/" README.md

      - name: Commit changes
        if: steps.check_updates.outputs.needs_update == 'true' && env.changes_made == 'true'
        run: |
          git add .
          git commit -m "feat: update proto files to ${{ steps.check_updates.outputs.latest_version }}
          
          - Generated from joblet-proto ${{ steps.check_updates.outputs.latest_version }}
          - Updated proto bindings and generation info
          - Updated README with new version info
          
          Auto-generated by proto-update workflow"
          
          git push origin "${{ env.branch_name }}"

      - name: Create Pull Request
        if: steps.check_updates.outputs.needs_update == 'true' && env.changes_made == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.branch_name }}
          title: "🆕 Update proto files to ${{ steps.check_updates.outputs.latest_version }}"
          body: |
            ## Proto Update
            
            This PR updates the Joblet protocol buffer files to the latest version.
            
            ### Changes
            - **From:** `${{ steps.check_updates.outputs.current_version }}`
            - **To:** `${{ steps.check_updates.outputs.latest_version }}`
            
            ### What's Updated
            - ✅ Generated Python proto bindings (`joblet_pb2.py`, `joblet_pb2_grpc.py`)
            - ✅ Type hints (`joblet_pb2.pyi`)
            - ✅ Generation info file (`_proto_generation_info.py`)
            - ✅ README version references
            
            ### Testing
            - [ ] CI tests pass
            - [ ] Examples still work
            - [ ] API compatibility maintained
            
            ### Proto Changes
            See the [joblet-proto repository](https://github.com/ehsaniara/joblet-proto/releases) for details about what changed in this version.
            
            ---
            🤖 *This PR was automatically created by the proto-update workflow*
          labels: |
            enhancement
            proto-update
            dependencies
          reviewers: |
            # Add reviewers here
          assignees: |
            # Add assignees here

      - name: Create issue if update fails
        if: failure() && steps.check_updates.outputs.needs_update == 'true'
        uses: peter-evans/create-issue-or-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "⚠️ Failed to update proto files to ${{ steps.check_updates.outputs.latest_version }}"
          body: |
            ## Proto Update Failed
            
            The automated proto update workflow failed while trying to update to version `${{ steps.check_updates.outputs.latest_version }}`.
            
            ### Error Details
            Check the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for detailed error information.
            
            ### Manual Steps
            You may need to update manually:
            
            ```bash
            # Check available versions
            python scripts/generate_proto.py --list-tags
            
            # Update to specific version
            python scripts/generate_proto.py --version ${{ steps.check_updates.outputs.latest_version }}
            
            # Test the changes
            make proto-clean
            make proto PROTO_VERSION=${{ steps.check_updates.outputs.latest_version }}
            make test
            ```
            
            ### Next Steps
            - [ ] Investigate the failure
            - [ ] Update proto files manually if needed
            - [ ] Close this issue once resolved
            
            ---
            🤖 *This issue was automatically created by the proto-update workflow*
          labels: |
            bug
            proto-update
            automation-failure

      - name: Summary
        if: always()
        run: |
          echo "## Proto Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Current Version:** ${{ steps.check_updates.outputs.current_version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Latest Version:** ${{ steps.check_updates.outputs.latest_version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Update Needed:** ${{ steps.check_updates.outputs.needs_update }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.check_updates.outputs.needs_update }}" == "true" ]; then
            if [ "${{ env.changes_made }}" == "true" ]; then
              echo "- **Status:** ✅ PR created for update" >> $GITHUB_STEP_SUMMARY
            else
              echo "- **Status:** ℹ️ No actual changes needed" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "- **Status:** ✅ Already up to date" >> $GITHUB_STEP_SUMMARY
          fi