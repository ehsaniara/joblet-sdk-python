name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Check code formatting
        run: |
          echo "Checking code formatting..."

          # Check if formatting is needed
          if ! black --check joblet/ examples/ scripts/ --extend-exclude "joblet_pb2\.py|joblet_pb2_grpc\.py|joblet_pb2\.pyi|_proto_generation_info\.py"; then
            echo "‚ùå Code formatting issues found."
            echo "üí° To fix locally, run: black joblet/ examples/ scripts/ --extend-exclude \"joblet_pb2\.py|joblet_pb2_grpc\.py|joblet_pb2\.pyi|_proto_generation_info\.py\""
            exit 1
          fi

          # Check if import sorting is needed
          if ! isort --check-only joblet/ examples/ scripts/ --skip joblet_pb2.py --skip joblet_pb2_grpc.py --skip joblet_pb2.pyi --skip _proto_generation_info.py; then
            echo "‚ùå Import sorting issues found."
            echo "üí° To fix locally, run: isort joblet/ examples/ scripts/ --skip joblet_pb2.py --skip joblet_pb2_grpc.py --skip joblet_pb2.pyi --skip _proto_generation_info.py"
            exit 1
          fi

          echo "‚úÖ Code formatting looks good!"

      - name: Lint with flake8
        run: flake8 joblet/ --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Type check with mypy
        run: mypy joblet/__init__.py joblet/client.py joblet/services.py joblet/exceptions.py --ignore-missing-imports

      - name: Test with pytest
        run: pytest tests/ -v

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/