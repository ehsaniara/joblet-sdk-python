[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "joblet-sdk"
description = "Python SDK for Joblet job orchestration system"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Joblet Team" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
requires-python = ">=3.8"
dependencies = [
    "grpcio>=1.60.0",
    "grpcio-tools>=1.60.0",
    "protobuf>=4.25.0",
    "typing-extensions>=4.8.0",
    "pyyaml>=6.0",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "flake8>=6.0.0",
    "pip-tools>=7.0.0",
    "safety>=3.0.0",
    "bandit>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/ehsaniara/joblet-sdk-python"
Documentation = "https://github.com/ehsaniara/joblet-sdk-python/blob/main/API_REFERENCE.md"
Repository = "https://github.com/ehsaniara/joblet-sdk-python"
Issues = "https://github.com/ehsaniara/joblet-sdk-python/issues"
Changelog = "https://github.com/ehsaniara/joblet-sdk-python/releases"

[project.scripts]
joblet-proto-gen = "joblet.scripts.generate_proto:main"

[tool.setuptools]
packages = ["joblet"]

[tool.setuptools.dynamic]
version = { attr = "joblet.__version__" }

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Exclude generated proto files
  joblet_pb2\.py
  | joblet_pb2_grpc\.py
  | joblet_pb2\.pyi
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
skip = ["joblet_pb2.py", "joblet_pb2_grpc.py", "joblet_pb2.pyi"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "grpc.*",
    "google.protobuf.*",
    "joblet.joblet_pb2",
    "joblet.joblet_pb2_grpc",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["joblet"]
omit = [
    "*/tests/*",
    "*/joblet_pb2.py",
    "*/joblet_pb2_grpc.py",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "examples"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_process_args for tests

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    "joblet_pb2.py",
    "joblet_pb2_grpc.py",
]